spring:
  security:
    oauth2:
      client:
        registration:
          google:
            clientName: google
            clientId: ${googleClientId}
            clientSecret: ${googleClientSecret}
          naver:
            clientName: naver
            clientId: ${naverClientId}
            clientSecret: ${naverClientSecret}
#            redirect-uri: ${naverRedirectUri}
#            authorization-grant-type: authorization_code
#            scope: name, email, profile_image
#            client-name: Naver
#        provider:
#          naver:
#            authorization_uri: https://nid.naver.com/oauth2.0/authorize
#            token_uri: https://nid.naver.com/oauth2.0/token
#            user-info-uri: https://openapi.naver.com/v1/nid/me
#            user_name_attribute: response
  sql:
    init:
      data-locations: classpath:sql/data.sql
      mode: never
  datasource:
    url: jdbc:h2:mem:test;DB_CLOSE_ON_EXIT=FALSE;
    username: sa
    password:
    driver-class-name: org.h2.Driver
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    open-in-view: false
    hibernate.ddl-auto: create
    properties:
      hibernate:
        show_sql: false
        format_sql: true
    defer-datasource-initialization: true

jwt:
  jwt-key: test-secretasdhuasid-ad01289sdhas9dh12=0-ddadasd
  jwt-auth-token-expiry-hours: 12

logging:
  level:
    "[org.springframework.web.filter]": debug
    "[org.hibernate.SQL]": debug
    "[org.hibernate.type.descriptor.sql.BasicBinder]": trace
    "[com.toy]": debug