/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated


import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.generated.tables.JActor
import org.jooq.generated.tables.JAddress
import org.jooq.generated.tables.JCategory
import org.jooq.generated.tables.JCity
import org.jooq.generated.tables.JCountry
import org.jooq.generated.tables.JCustomer
import org.jooq.generated.tables.JCustomerList
import org.jooq.generated.tables.JFilm
import org.jooq.generated.tables.JFilmActor
import org.jooq.generated.tables.JFilmCategory
import org.jooq.generated.tables.JFilmList
import org.jooq.generated.tables.JFilmText
import org.jooq.generated.tables.JInventory
import org.jooq.generated.tables.JLanguage
import org.jooq.generated.tables.JNicerButSlowerFilmList
import org.jooq.generated.tables.JPayment
import org.jooq.generated.tables.JRental
import org.jooq.generated.tables.JSalesByFilmCategory
import org.jooq.generated.tables.JSalesByStore
import org.jooq.generated.tables.JStaff
import org.jooq.generated.tables.JStaffList
import org.jooq.generated.tables.JStore
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class JSakila : SchemaImpl("sakila", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>sakila</code>
         */
        val SAKILA: JSakila = JSakila()
    }

    /**
     * The table <code>sakila.actor</code>.
     */
    val ACTOR: JActor get() = JActor.ACTOR

    /**
     * The table <code>sakila.address</code>.
     */
    val ADDRESS: JAddress get() = JAddress.ADDRESS

    /**
     * The table <code>sakila.category</code>.
     */
    val CATEGORY: JCategory get() = JCategory.CATEGORY

    /**
     * The table <code>sakila.city</code>.
     */
    val CITY: JCity get() = JCity.CITY

    /**
     * The table <code>sakila.country</code>.
     */
    val COUNTRY: JCountry get() = JCountry.COUNTRY

    /**
     * The table <code>sakila.customer</code>.
     */
    val CUSTOMER: JCustomer get() = JCustomer.CUSTOMER

    /**
     * VIEW
     */
    val CUSTOMER_LIST: JCustomerList get() = JCustomerList.CUSTOMER_LIST

    /**
     * The table <code>sakila.film</code>.
     */
    val FILM: JFilm get() = JFilm.FILM

    /**
     * The table <code>sakila.film_actor</code>.
     */
    val FILM_ACTOR: JFilmActor get() = JFilmActor.FILM_ACTOR

    /**
     * The table <code>sakila.film_category</code>.
     */
    val FILM_CATEGORY: JFilmCategory get() = JFilmCategory.FILM_CATEGORY

    /**
     * VIEW
     */
    val FILM_LIST: JFilmList get() = JFilmList.FILM_LIST

    /**
     * The table <code>sakila.film_text</code>.
     */
    val FILM_TEXT: JFilmText get() = JFilmText.FILM_TEXT

    /**
     * The table <code>sakila.inventory</code>.
     */
    val INVENTORY: JInventory get() = JInventory.INVENTORY

    /**
     * The table <code>sakila.language</code>.
     */
    val LANGUAGE: JLanguage get() = JLanguage.LANGUAGE

    /**
     * VIEW
     */
    val NICER_BUT_SLOWER_FILM_LIST: JNicerButSlowerFilmList get() = JNicerButSlowerFilmList.NICER_BUT_SLOWER_FILM_LIST

    /**
     * The table <code>sakila.payment</code>.
     */
    val PAYMENT: JPayment get() = JPayment.PAYMENT

    /**
     * The table <code>sakila.rental</code>.
     */
    val RENTAL: JRental get() = JRental.RENTAL

    /**
     * VIEW
     */
    val SALES_BY_FILM_CATEGORY: JSalesByFilmCategory get() = JSalesByFilmCategory.SALES_BY_FILM_CATEGORY

    /**
     * VIEW
     */
    val SALES_BY_STORE: JSalesByStore get() = JSalesByStore.SALES_BY_STORE

    /**
     * The table <code>sakila.staff</code>.
     */
    val STAFF: JStaff get() = JStaff.STAFF

    /**
     * VIEW
     */
    val STAFF_LIST: JStaffList get() = JStaffList.STAFF_LIST

    /**
     * The table <code>sakila.store</code>.
     */
    val STORE: JStore get() = JStore.STORE

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        JActor.ACTOR,
        JAddress.ADDRESS,
        JCategory.CATEGORY,
        JCity.CITY,
        JCountry.COUNTRY,
        JCustomer.CUSTOMER,
        JCustomerList.CUSTOMER_LIST,
        JFilm.FILM,
        JFilmActor.FILM_ACTOR,
        JFilmCategory.FILM_CATEGORY,
        JFilmList.FILM_LIST,
        JFilmText.FILM_TEXT,
        JInventory.INVENTORY,
        JLanguage.LANGUAGE,
        JNicerButSlowerFilmList.NICER_BUT_SLOWER_FILM_LIST,
        JPayment.PAYMENT,
        JRental.RENTAL,
        JSalesByFilmCategory.SALES_BY_FILM_CATEGORY,
        JSalesByStore.SALES_BY_STORE,
        JStaff.STAFF,
        JStaffList.STAFF_LIST,
        JStore.STORE
    )
}
