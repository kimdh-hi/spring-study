/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos


import java.time.LocalDateTime

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.generated.tables.Address
import org.jooq.generated.tables.records.AddressRecord
import org.jooq.impl.DAOImpl
import org.jooq.types.UInteger


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class AddressDao(configuration: Configuration?) : DAOImpl<AddressRecord, org.jooq.generated.tables.pojos.Address, UInteger>(Address.ADDRESS, org.jooq.generated.tables.pojos.Address::class.java, configuration) {

    /**
     * Create a new AddressDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: org.jooq.generated.tables.pojos.Address): UInteger? = o.addressId

    /**
     * Fetch records that have <code>address_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfAddressId(lowerInclusive: UInteger?, upperInclusive: UInteger?): List<org.jooq.generated.tables.pojos.Address> = fetchRange(Address.ADDRESS.ADDRESS_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>address_id IN (values)</code>
     */
    fun fetchByAddressId(vararg values: UInteger): List<org.jooq.generated.tables.pojos.Address> = fetch(Address.ADDRESS.ADDRESS_ID, *values)

    /**
     * Fetch a unique record that has <code>address_id = value</code>
     */
    fun fetchOneByAddressId(value: UInteger): org.jooq.generated.tables.pojos.Address? = fetchOne(Address.ADDRESS.ADDRESS_ID, value)

    /**
     * Fetch records that have <code>address BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfAddress(lowerInclusive: String?, upperInclusive: String?): List<org.jooq.generated.tables.pojos.Address> = fetchRange(Address.ADDRESS.ADDRESS_, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    fun fetchByAddress(vararg values: String): List<org.jooq.generated.tables.pojos.Address> = fetch(Address.ADDRESS.ADDRESS_, *values)

    /**
     * Fetch records that have <code>address2 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfAddress2(lowerInclusive: String?, upperInclusive: String?): List<org.jooq.generated.tables.pojos.Address> = fetchRange(Address.ADDRESS.ADDRESS2, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>address2 IN (values)</code>
     */
    fun fetchByAddress2(vararg values: String): List<org.jooq.generated.tables.pojos.Address> = fetch(Address.ADDRESS.ADDRESS2, *values)

    /**
     * Fetch records that have <code>district BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfDistrict(lowerInclusive: String?, upperInclusive: String?): List<org.jooq.generated.tables.pojos.Address> = fetchRange(Address.ADDRESS.DISTRICT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>district IN (values)</code>
     */
    fun fetchByDistrict(vararg values: String): List<org.jooq.generated.tables.pojos.Address> = fetch(Address.ADDRESS.DISTRICT, *values)

    /**
     * Fetch records that have <code>city_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCityId(lowerInclusive: UInteger?, upperInclusive: UInteger?): List<org.jooq.generated.tables.pojos.Address> = fetchRange(Address.ADDRESS.CITY_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>city_id IN (values)</code>
     */
    fun fetchByCityId(vararg values: UInteger): List<org.jooq.generated.tables.pojos.Address> = fetch(Address.ADDRESS.CITY_ID, *values)

    /**
     * Fetch records that have <code>postal_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfPostalCode(lowerInclusive: String?, upperInclusive: String?): List<org.jooq.generated.tables.pojos.Address> = fetchRange(Address.ADDRESS.POSTAL_CODE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>postal_code IN (values)</code>
     */
    fun fetchByPostalCode(vararg values: String): List<org.jooq.generated.tables.pojos.Address> = fetch(Address.ADDRESS.POSTAL_CODE, *values)

    /**
     * Fetch records that have <code>phone BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfPhone(lowerInclusive: String?, upperInclusive: String?): List<org.jooq.generated.tables.pojos.Address> = fetchRange(Address.ADDRESS.PHONE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>phone IN (values)</code>
     */
    fun fetchByPhone(vararg values: String): List<org.jooq.generated.tables.pojos.Address> = fetch(Address.ADDRESS.PHONE, *values)

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfLastUpdate(lowerInclusive: LocalDateTime?, upperInclusive: LocalDateTime?): List<org.jooq.generated.tables.pojos.Address> = fetchRange(Address.ADDRESS.LAST_UPDATE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    fun fetchByLastUpdate(vararg values: LocalDateTime): List<org.jooq.generated.tables.pojos.Address> = fetch(Address.ADDRESS.LAST_UPDATE, *values)
}
