/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos


import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.generated.tables.FilmText
import org.jooq.generated.tables.records.FilmTextRecord
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class FilmTextDao(configuration: Configuration?) : DAOImpl<FilmTextRecord, org.jooq.generated.tables.pojos.FilmText, Int>(FilmText.FILM_TEXT, org.jooq.generated.tables.pojos.FilmText::class.java, configuration) {

    /**
     * Create a new FilmTextDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: org.jooq.generated.tables.pojos.FilmText): Int? = o.filmId

    /**
     * Fetch records that have <code>film_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfFilmId(lowerInclusive: Int?, upperInclusive: Int?): List<org.jooq.generated.tables.pojos.FilmText> = fetchRange(FilmText.FILM_TEXT.FILM_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>film_id IN (values)</code>
     */
    fun fetchByFilmId(vararg values: Int): List<org.jooq.generated.tables.pojos.FilmText> = fetch(FilmText.FILM_TEXT.FILM_ID, *values.toTypedArray())

    /**
     * Fetch a unique record that has <code>film_id = value</code>
     */
    fun fetchOneByFilmId(value: Int): org.jooq.generated.tables.pojos.FilmText? = fetchOne(FilmText.FILM_TEXT.FILM_ID, value)

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfTitle(lowerInclusive: String?, upperInclusive: String?): List<org.jooq.generated.tables.pojos.FilmText> = fetchRange(FilmText.FILM_TEXT.TITLE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    fun fetchByTitle(vararg values: String): List<org.jooq.generated.tables.pojos.FilmText> = fetch(FilmText.FILM_TEXT.TITLE, *values)

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfDescription(lowerInclusive: String?, upperInclusive: String?): List<org.jooq.generated.tables.pojos.FilmText> = fetchRange(FilmText.FILM_TEXT.DESCRIPTION, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    fun fetchByDescription(vararg values: String): List<org.jooq.generated.tables.pojos.FilmText> = fetch(FilmText.FILM_TEXT.DESCRIPTION, *values)
}
