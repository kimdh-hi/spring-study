/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos


import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Size

import java.io.Serializable

import org.jooq.types.UInteger


/**
 * VIEW
 */
@Suppress("UNCHECKED_CAST")
data class StaffList(
    var id: UInteger? = null,
    @get:Size(max = 91)
    var name: String? = null,
    @get:NotNull
    @get:Size(max = 50)
    var address: String? = null,
    @get:Size(max = 10)
    var zipCode: String? = null,
    @get:NotNull
    @get:Size(max = 20)
    var phone: String? = null,
    @get:NotNull
    @get:Size(max = 50)
    var city: String? = null,
    @get:NotNull
    @get:Size(max = 50)
    var country: String? = null,
    @get:NotNull
    var sid: UInteger? = null
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: StaffList = other as StaffList
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.name == null) {
            if (o.name != null)
                return false
        }
        else if (this.name != o.name)
            return false
        if (this.address == null) {
            if (o.address != null)
                return false
        }
        else if (this.address != o.address)
            return false
        if (this.zipCode == null) {
            if (o.zipCode != null)
                return false
        }
        else if (this.zipCode != o.zipCode)
            return false
        if (this.phone == null) {
            if (o.phone != null)
                return false
        }
        else if (this.phone != o.phone)
            return false
        if (this.city == null) {
            if (o.city != null)
                return false
        }
        else if (this.city != o.city)
            return false
        if (this.country == null) {
            if (o.country != null)
                return false
        }
        else if (this.country != o.country)
            return false
        if (this.sid == null) {
            if (o.sid != null)
                return false
        }
        else if (this.sid != o.sid)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + (if (this.name == null) 0 else this.name.hashCode())
        result = prime * result + (if (this.address == null) 0 else this.address.hashCode())
        result = prime * result + (if (this.zipCode == null) 0 else this.zipCode.hashCode())
        result = prime * result + (if (this.phone == null) 0 else this.phone.hashCode())
        result = prime * result + (if (this.city == null) 0 else this.city.hashCode())
        result = prime * result + (if (this.country == null) 0 else this.country.hashCode())
        result = prime * result + (if (this.sid == null) 0 else this.sid.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("StaffList (")

        sb.append(id)
        sb.append(", ").append(name)
        sb.append(", ").append(address)
        sb.append(", ").append(zipCode)
        sb.append(", ").append(phone)
        sb.append(", ").append(city)
        sb.append(", ").append(country)
        sb.append(", ").append(sid)

        sb.append(")")
        return sb.toString()
    }
}
