/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos


import java.time.LocalDateTime

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.generated.tables.Actor
import org.jooq.generated.tables.records.ActorRecord
import org.jooq.impl.DAOImpl
import org.jooq.types.UInteger


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ActorDao(configuration: Configuration?) : DAOImpl<ActorRecord, org.jooq.generated.tables.pojos.Actor, UInteger>(Actor.ACTOR, org.jooq.generated.tables.pojos.Actor::class.java, configuration) {

    /**
     * Create a new ActorDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: org.jooq.generated.tables.pojos.Actor): UInteger? = o.actorId

    /**
     * Fetch records that have <code>actor_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfActorId(lowerInclusive: UInteger?, upperInclusive: UInteger?): List<org.jooq.generated.tables.pojos.Actor> = fetchRange(Actor.ACTOR.ACTOR_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>actor_id IN (values)</code>
     */
    fun fetchByActorId(vararg values: UInteger): List<org.jooq.generated.tables.pojos.Actor> = fetch(Actor.ACTOR.ACTOR_ID, *values)

    /**
     * Fetch a unique record that has <code>actor_id = value</code>
     */
    fun fetchOneByActorId(value: UInteger): org.jooq.generated.tables.pojos.Actor? = fetchOne(Actor.ACTOR.ACTOR_ID, value)

    /**
     * Fetch records that have <code>first_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfFirstName(lowerInclusive: String?, upperInclusive: String?): List<org.jooq.generated.tables.pojos.Actor> = fetchRange(Actor.ACTOR.FIRST_NAME, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    fun fetchByFirstName(vararg values: String): List<org.jooq.generated.tables.pojos.Actor> = fetch(Actor.ACTOR.FIRST_NAME, *values)

    /**
     * Fetch records that have <code>last_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfLastName(lowerInclusive: String?, upperInclusive: String?): List<org.jooq.generated.tables.pojos.Actor> = fetchRange(Actor.ACTOR.LAST_NAME, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    fun fetchByLastName(vararg values: String): List<org.jooq.generated.tables.pojos.Actor> = fetch(Actor.ACTOR.LAST_NAME, *values)

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfLastUpdate(lowerInclusive: LocalDateTime?, upperInclusive: LocalDateTime?): List<org.jooq.generated.tables.pojos.Actor> = fetchRange(Actor.ACTOR.LAST_UPDATE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    fun fetchByLastUpdate(vararg values: LocalDateTime): List<org.jooq.generated.tables.pojos.Actor> = fetch(Actor.ACTOR.LAST_UPDATE, *values)
}
