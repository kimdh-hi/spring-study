/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos


import java.time.LocalDateTime

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.generated.tables.Category
import org.jooq.generated.tables.records.CategoryRecord
import org.jooq.impl.DAOImpl
import org.jooq.types.UInteger


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CategoryDao(configuration: Configuration?) : DAOImpl<CategoryRecord, org.jooq.generated.tables.pojos.Category, UInteger>(Category.CATEGORY, org.jooq.generated.tables.pojos.Category::class.java, configuration) {

    /**
     * Create a new CategoryDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: org.jooq.generated.tables.pojos.Category): UInteger? = o.categoryId

    /**
     * Fetch records that have <code>category_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCategoryId(lowerInclusive: UInteger?, upperInclusive: UInteger?): List<org.jooq.generated.tables.pojos.Category> = fetchRange(Category.CATEGORY.CATEGORY_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>category_id IN (values)</code>
     */
    fun fetchByCategoryId(vararg values: UInteger): List<org.jooq.generated.tables.pojos.Category> = fetch(Category.CATEGORY.CATEGORY_ID, *values)

    /**
     * Fetch a unique record that has <code>category_id = value</code>
     */
    fun fetchOneByCategoryId(value: UInteger): org.jooq.generated.tables.pojos.Category? = fetchOne(Category.CATEGORY.CATEGORY_ID, value)

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfName(lowerInclusive: String?, upperInclusive: String?): List<org.jooq.generated.tables.pojos.Category> = fetchRange(Category.CATEGORY.NAME, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    fun fetchByName(vararg values: String): List<org.jooq.generated.tables.pojos.Category> = fetch(Category.CATEGORY.NAME, *values)

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfLastUpdate(lowerInclusive: LocalDateTime?, upperInclusive: LocalDateTime?): List<org.jooq.generated.tables.pojos.Category> = fetchRange(Category.CATEGORY.LAST_UPDATE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    fun fetchByLastUpdate(vararg values: LocalDateTime): List<org.jooq.generated.tables.pojos.Category> = fetch(Category.CATEGORY.LAST_UPDATE, *values)
}
