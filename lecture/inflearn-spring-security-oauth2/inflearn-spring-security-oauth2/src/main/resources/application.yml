server.port: 8081

spring:
  security:
    oauth2:
      client:
        registration:
          keycloak:
            authorization-grant-type: authorization_code
            client-id: ${keycloakClientId}
            client-name: oauth2-client-app
            client-secret: ${keycloakClientSecret}
            redirect-uri: http://localhost:8081/login/oauth2/code/keycloak
            client-authentication-method: client_secret_post
            scope: openid,profile,email

          google:
            client-id: ${googleClientId}
            client-secret: ${googleClientSecret}

          naver:
            client-id: ${naverClientId}
            client-secret: ${naverCleintSecret}
            authorization-grant-type: authorization_code
            client-name: naver-client-app
            redirect-uri: http://localhost:8081/login/oauth2/code/naver
            scope: profile,email

        provider:
          keycloak:
            authorization-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/auth
            issuer-uri: http://localhost:8080/realms/oauth2
            jwt-set-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/certs
            token-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/token
            user-info-url: http://localhost:8080/realms/oauth2/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
  datasource:
    url: jdbc:h2:mem:test;DB_CLOSE_ON_EXIT=FALSE;
    username: sa
    password:
    driver-class-name: org.h2.Driver
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    hibernate.ddl-auto: create
    properties:
      hibernate:
        show_sql: false
        format_sql: true
